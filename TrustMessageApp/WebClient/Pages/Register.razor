@page "/register"
@inject AuthService AuthService
@inject NavigationManager Navigation
@using BaseLibrary.DTOs

<h3>Register</h3>

<EditForm Model="@registerModel" OnValidSubmit="HandleRegister">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>Username:</label>
        <InputText @bind-Value="registerModel.Username" />
    </div>
    <div>
        <label>Email:</label>
        <InputText @bind-Value="registerModel.Email" />
    </div>
    <div>
        <label>Password:</label>
        <InputText @bind-Value="registerModel.Password" type="password" />
    </div>

    <button type="submit">Register</button>
</EditForm>

@if (!string.IsNullOrEmpty(qrCodeUri))
{
    <h4>Scan this QR code with your authentication app:</h4>
    <img src="https://api.qrserver.com/v1/create-qr-code/?data=@qrCodeUri&size=150x150" alt="2FA QR Code" />
}

@if (!string.IsNullOrEmpty(errorMessage))
{
    <p style="color:red">@errorMessage</p>
}

@code {
    private RegisterRequestDTO registerModel = new();
    private string qrCodeUri = string.Empty;
    private string errorMessage = string.Empty;

    private async Task HandleRegister()
    {
        try
        {
            var qrUri = await AuthService.RegisterAsync(registerModel);
            if (qrUri != null)
            {
                qrCodeUri = qrUri;
            }
            else
            {
                errorMessage = "Registration failed. Username might already be taken.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Error: {ex.Message}";
        }
    }
}
