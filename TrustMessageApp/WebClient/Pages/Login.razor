@page "/login"
@inject AuthService AuthService
@inject NavigationManager Navigation
@using BaseLibrary.DTOs

<h3>Login</h3>

<EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div>
        <label>Username:</label>
        <InputText @bind-Value="loginModel.Username" />
    </div>
    <div>
        <label>Password:</label>
        <InputText @bind-Value="loginModel.Password" type="password" />
    </div>
    <div>
        <label>2FA Code:</label>
        <InputText @bind-Value="loginModel.TwoFactorCode" />
    </div>
    <button type="submit">Login</button>
</EditForm>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <p style="color:red">@errorMessage</p>
}

@code {
    private LoginRequestDTO loginModel = new();
    private string errorMessage = string.Empty;

    private async Task HandleLogin()
    {
        try
        {
            var success = await AuthService.LoginAsync(loginModel);
            if (success)
            {
                Navigation.NavigateTo("/messages");
            }
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }
}
